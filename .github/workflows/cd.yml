name: CD

on:
  push:
    branches:
      - main
      - dev

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to NCP Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.NCP_CONTAINER_REGISTRY }}
          username: ${{ secrets.NCP_ACCESS_KEY }}
          password: ${{ secrets.NCP_SECRET_KEY }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.NCP_CONTAINER_REGISTRY }}/${{ secrets.IMAGE_NAME }}
          cache-from: type=registry,ref=${{ secrets.NCP_CONTAINER_REGISTRY }}/${{ secrets.IMAGE_NAME }}
          cache-to: type=inline

  deploy-to-server:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            echo "${{ secrets.ENV_FILE }}" >> .env

            docker rm -f $(docker ps -qa)

            docker login ${{ secrets.NCP_CONTAINER_REGISTRY }} -u ${{ secrets.NCP_ACCESS_KEY }} -p ${{ secrets.NCP_SECRET_KEY }}
            docker pull ${{ secrets.NCP_CONTAINER_REGISTRY }}/${{ secrets.IMAGE_NAME }}
            docker run -d -p ${{ secrets.HOST_PORT }}:${{ secrets.CONTAINER_PORT }} --env-file .env ${{ secrets.NCP_CONTAINER_REGISTRY }}/${{ secrets.IMAGE_NAME }}

            docker image prune -f
            rm -f .env
