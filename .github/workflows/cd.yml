name: CD

on:
  push:
    branches:
      - main
      - dev

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to NCP Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.NCP_CONTAINER_REGISTRY }}
          username: ${{ secrets.NCP_ACCESS_KEY }}
          password: ${{ secrets.NCP_SECRET_KEY }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.NCP_CONTAINER_REGISTRY }}/${{ secrets.IMAGE_NAME }}
          cache-from: type=registry,ref=${{ secrets.NCP_CONTAINER_REGISTRY }}/${{ secrets.IMAGE_NAME }}
          cache-to: type=inline

  copy-files:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Add Public key to known_hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PUBLIC_KEY }}" >> ~/.ssh/known_hosts

      - name: Copy Docker Compose file
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          source: 'docker-compose.yml'
          target: ${{ secrets.COMPOSE_FILE_PATH }}
          overwrite: true

  deploy-to-server:
    needs:
      - build-and-push
      - copy-files
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            export NCP_CONTAINER_REGISTRY=${{ secrets.NCP_CONTAINER_REGISTRY }}
            export NCP_ACCESS_KEY=${{ secrets.NCP_ACCESS_KEY }}
            export NCP_SECRET_KEY=${{ secrets.NCP_SECRET_KEY }}
            export COMPOSE_FILE_PATH=${{ secrets.COMPOSE_FILE_PATH }}
            export IMAGE_NAME=${{ secrets.IMAGE_NAME }}
            export HOST_PORT=${{ secrets.HOST_PORT }}
            export CONTAINER_PORT=${{ secrets.CONTAINER_PORT }}
            export REDIS_PORT=${{ secrets.REDIS_PORT }}

            echo "${{ secrets.ENV_FILE }}" > $COMPOSE_FILE_PATH/.env

            docker rm -f $(docker ps -qa)

            docker login $NCP_CONTAINER_REGISTRY -u $NCP_ACCESS_KEY -p $NCP_SECRET_KEY
            docker pull $NCP_CONTAINER_REGISTRY/$IMAGE_NAME

            docker compose -f $COMPOSE_FILE_PATH/docker-compose.yml up -d

            docker image prune -f
            rm -f $COMPOSE_FILE_PATH/.env
